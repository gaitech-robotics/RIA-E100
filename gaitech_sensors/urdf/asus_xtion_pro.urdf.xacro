<?xml version="1.0"?>
<robot xmlns:xacro="http://wiki.ros.org/xacro" name="sensor_asus_xtion_pro">

  <!-- Xacro properties -->
  <!-- xacro:property name="M_SCALE" value="0.001"/ -->
  <xacro:property name="M_SCALE" value="1.0"/>

  <!-- xacro:property name="asus_xtion_scale" value="0.001"/ -->
  <xacro:property name="asus_xtion_scale" value="1.0"/>
  <xacro:property name="asus_xtion_pro_depth_rel_rgb_py" value="0.0270" />
  <xacro:property name="asus_xtion_pro_rgb_rel_rgb_py"   value="-0.0220" />
  <xacro:property name="M_PI" value="3.1415926535897931" />

  <xacro:macro name="sensor_asus_xtion_pro" params="prefix parent *origin">

    <joint name="${prefix}rgb_joint" type="fixed">
	  <xacro:insert_block name="origin" />
      <parent link="${parent}"/>
      <child link="${prefix}rgb_base_link" />
    </joint>

    <link name="${prefix}rgb_base_link">
      <inertial>
        <mass value="0.01" />
        <origin xyz="-0.0175 0 0" />
        <xacro:solid_cuboid_inertia m="0.01" w="0.035" h="0.180" d="0.05" /> 
      </inertial>
    </link>

    <joint name="${prefix}rgb_optical_joint" type="fixed">
      <origin xyz="0 0 0" rpy="${-M_PI/2} 0 ${-M_PI/2}" />
      <parent link="${prefix}rgb_base_link" />
      <child link="${prefix}rgb_optical_frame" />
    </joint>

    <link name="${prefix}rgb_optical_frame">
      <inertial>
        <mass value="0.01" />
        <origin xyz="0 0 0" />
        <xacro:solid_cuboid_inertia m="0.01" w="0.180" h="0.035" d="0.05" /> 
      </inertial>
    </link>

    <joint name="${prefix}joint" type="fixed">
      <origin xyz="0 ${asus_xtion_pro_rgb_rel_rgb_py} 0"
              rpy="0 0 0"/>
      <parent link="${prefix}rgb_base_link"/>
      <child link="${prefix}link"/>
    </joint>
    <link name="${prefix}link">
      <visual>
        <origin xyz="-0.01 0 0" rpy="${-M_PI/2} -${M_PI} ${-M_PI/2}"/>
        <geometry>
          <mesh filename="package://gaitech_sensors/meshes/asus_xtion_pro_live.dae" scale="${asus_xtion_scale} ${asus_xtion_scale} ${asus_xtion_scale}"/>
        </geometry>
      </visual>
      <collision>
        <origin xyz="0.0 0.0 0.0" rpy="0 0 0" />
        <geometry>
        <box size="0.0730 .2760 0.0720"/>
      </geometry>
      </collision>
      <inertial>
        <mass value="0.01" />
        <origin xyz="-0.0175 0.0025 0" rpy="0 0 0"/>
        <xacro:solid_cuboid_inertia m="0.01" w="0.035" h="0.180" d="0.05" /> 
      </inertial>
    </link>

    <joint name="${prefix}depth_joint" type="fixed">
      <origin xyz="0 ${asus_xtion_pro_depth_rel_rgb_py} 0" rpy="0 0 0" />
      <parent link="${prefix}rgb_base_link" />
      <child link="${prefix}depth_link" />
    </joint>

    <link name="${prefix}depth_link">
      <inertial>
        <mass value="0.01" />
        <origin xyz="-0.0175 -${asus_xtion_pro_depth_rel_rgb_py} 0" />
        <xacro:solid_cuboid_inertia m="0.01" w="0.035" h="0.180" d="0.05" /> 
      </inertial>
    </link>

    <joint name="${prefix}depth_optical_joint" type="fixed">
      <origin xyz="0 0 0" rpy="${-M_PI/2} 0 ${-M_PI/2}" />
      <parent link="${prefix}depth_link" />
      <child link="${prefix}depth_optical_frame" />
    </joint>

    <link name="${prefix}depth_optical_frame">
      <inertial>
        <mass value="0.01" />
        <origin xyz="${asus_xtion_pro_depth_rel_rgb_py} 0 -0.0175" />
        <xacro:solid_cuboid_inertia m="0.01" w="0.18" h="0.05" d="0.035" /> 
      </inertial>
    </link>

  <!-- RGBD sensor for simulation, same as Kinect -->
  <xacro:sensor_xtion_pro_gazebo/>

  </xacro:macro>

   <xacro:macro name="sensor_xtion_pro_gazebo">

    <gazebo reference="${prefix}depth_link">
      <sensor type="depth" name="${prefix}sensor">
        <always_on>true</always_on>
        <update_rate>20.0</update_rate>
        <camera>
          <horizontal_fov>${60.0*M_PI/180.0}</horizontal_fov>
          <image>
            <format>R8G8B8</format>
            <width>640</width>
            <height>480</height>
          </image>
          <clip>
            <near>0.05</near>
            <far>3.5</far>
          </clip>
        </camera>
        <plugin name="${prefix}controller" filename="libgazebo_ros_openni_kinect.so">
          <cameraName>${prefix}</cameraName>
          <alwaysOn>true</alwaysOn>
          <updateRate>15</updateRate>
          <imageTopicName>rgb/image_raw</imageTopicName>
          <depthImageTopicName>depth/image_raw</depthImageTopicName>
          <pointCloudTopicName>depth/points</pointCloudTopicName>
          <cameraInfoTopicName>rgb/camera_info</cameraInfoTopicName>
          <depthImageCameraInfoTopicName>depth/camera_info</depthImageCameraInfoTopicName>
          <frameName>${prefix}depth_optical_frame</frameName>
          <baseline>0.1</baseline>
          <distortion_k1>0.0</distortion_k1>
          <distortion_k2>0.0</distortion_k2>
          <distortion_k3>0.0</distortion_k3>
          <distortion_t1>0.0</distortion_t1>
          <distortion_t2>0.0</distortion_t2>
          <pointCloudCutoff>0.4</pointCloudCutoff>
          <ignoreTfPrefix>1</ignoreTfPrefix>
        </plugin>
      </sensor>
    </gazebo>
  </xacro:macro>
</robot>
